# Пример рабочего процесса для создания и развертывания сайта Hugo на страницах GitHub
name: Deploy Hugo site to Pages

on:
  # Выполняется по нажатиям, нацеленным на ветку по умолчанию
  push:
    branches: ["main"]

 # Позволяет вам запустить этот рабочий процесс вручную на вкладке Действия
  workflow_dispatch:

# Устанавливает разрешения для GITHUB_TOKEN, разрешающие развертывание на страницах GitHub
permissions:
  contents: read
  pages: write
  id-token: write

# Разрешите только одно одновременное развертывание, пропуская запуски, поставленные в очередь между текущим запуском и последним, поставленным в очередь.
# Однако не отменяйте текущие запуски, поскольку мы хотим, чтобы эти производственные развертывания были завершены.
concurrency:
  group: "pages"
  cancel-in-progress: false

# По умолчанию используется bash
defaults:
  run:
    shell: bash

jobs:
# Построить работу
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.128.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Задание по развертыванию
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
